version: "3"
networks:
  nginx_net:
    name: nginx_net

services:
  certbot:
    container_name: certbot
    image: certbot/certbot
    networks:
      nginx_net:
    volumes:
      - ./../nginx/certbot/conf:/etc/letsencrypt
      - ./../nginx/certbot/www:/var/www/certbot
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  nginx:
    image: nginx:alpine
    container_name: monorepo_nginx
    restart: unless-stopped
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    tty: true
    networks:
      nginx_net:
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./../:/var/www
      - ./../nginx/conf.d.${NODE_ENV}:/etc/nginx/conf.d
      - ./../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./../nginx/certbot/conf:/etc/letsencrypt
      - ./../nginx/certbot/www:/var/www/certbot
    depends_on:
      - mongo
    links:
      - mongo
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mongo:
    container_name: monorepo_mongo
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=${DB_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./../mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./../mongo/mongo-volume:/data/db
      - ./../mongo/mongodb:/home/mongodb
    ports:
      - "27017:27017"
